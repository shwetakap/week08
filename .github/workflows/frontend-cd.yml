name: CD - Deploy Frontend to AKS

on:
  workflow_run:
    workflows: ["CD - Deploy Backend Services to AKS"] # run after backend CD
    types:
      - completed

  workflow_dispatch:
    inputs:
      product_api_ip:
        description: 'External IP of Product Service'
        required: true
        default: 'http://<ip_address>:8000'
      order_api_ip:
        description: 'External IP of Order Service'
        required: true
        default: 'http://<ip_address>:8001'
      aks_cluster_name:
        description: 'Name of the AKS Cluster'
        required: true
        default: 'sk8-aks'
      aks_resource_group:
        description: 'Resource Group of the AKS Cluster'
        required: true
        default: 'sk8-rg'

jobs:
  deploy_frontend:
    runs-on: ubuntu-latest
    environment: Production

    # Default values for automatic runs
    env:
      AKS_CLUSTER_NAME: ${{ github.event.inputs.aks_cluster_name || 'sk8-aks' }}
      AKS_RESOURCE_GROUP: ${{ github.event.inputs.aks_resource_group || 'sk8-rg' }}
      PRODUCT_API_IP: ${{ github.event.inputs.product_api_ip || '' }}
      ORDER_API_IP: ${{ github.event.inputs.order_api_ip || '' }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR
        run: az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY }}

      - name: Inject backend IPs into frontend
        run: |
          sed -i "s|_PRODUCT_API_URL_|$PRODUCT_API_IP|g" frontend/main.js
          sed -i "s|_ORDER_API_URL_|$ORDER_API_IP|g" frontend/main.js

      - name: Build & Push Frontend Image
        run: |
          docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}/frontend:latest ./frontend/
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/frontend:latest

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: $AKS_RESOURCE_GROUP
          cluster-name: $AKS_CLUSTER_NAME

      - name: Deploy frontend to AKS
        run: |
          cd k8s/
          kubectl apply -f frontend.yaml

      - name: Azure Logout
        run: az logout
